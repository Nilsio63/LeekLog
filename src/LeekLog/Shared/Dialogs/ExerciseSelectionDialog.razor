@inject IExerciseService _exerciseService

<MudDialog DisableSidePadding="true">
    <DialogContent>
        <MudContainer>
            <MudAutocomplete T="ExerciseEntity" Label="Exercise" @bind-Value="_selectedExercise" MaxItems="20"
                             SearchFunc="Search" ToStringFunc="@(e => e == null ? null : e.Title)" />
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="MudDialog.Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Confirm">Confirm</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private ExerciseEntity? _selectedExercise;

    [CascadingParameter] public MudDialogInstance MudDialog { get; set; } = null!;
    [Parameter] public List<ExerciseEntity> Exercises { get; set; } = new();

    public void Confirm()
    {
        MudDialog.Close(_selectedExercise);
    }

    private async Task<IEnumerable<ExerciseEntity>> Search(string value)
    {
        return await _exerciseService.SearchAsync(value, Exercises);
    }
}
