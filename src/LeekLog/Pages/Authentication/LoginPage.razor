@page "/login"
@using LeekLog.Authentication;
@inject IUserAuthService _userAuthService
@inject NavigationManager _navManager

<PageTitle>Login</PageTitle>

<MudText Typo="Typo.h3">Login</MudText>

<MudGrid>
    <AuthorizeView>
        <Authorized>
            <MudItem>
                <MudAlert Severity="Severity.Warning">You are already logged in!<br />What are you doing here?</MudAlert>
            </MudItem>
        </Authorized>
        <NotAuthorized>
            <MudItem xs="12">
                <MudText Typo="Typo.subtitle1">
                    Use your user name and password to login!<br />
                    If you forgot your user name or password, well ... that's not really my problem, isn't it?
                </MudText>
            </MudItem>

            <MudItem xs="12">
                <MudPaper Class="pa-4">
                    <MudForm Model="this">
                        <MudTextField T="string" Label="User name" Required="true" @bind-Value="UserName" />
                        <MudTextField T="string" Label="Password" InputType="InputType.Password" Required="true" @bind-Value="Password" />
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="LoginAsync">Login</MudButton>
                    </MudForm>
                </MudPaper>
            </MudItem>

            @if (!string.IsNullOrWhiteSpace(_errorMessage))
            {
                <MudItem xs="12">
                    <MudAlert Severity="Severity.Error">@_errorMessage</MudAlert>
                </MudItem>
            }
        </NotAuthorized>
    </AuthorizeView>
</MudGrid>

@code {
    private string? _errorMessage = null;

    public string UserName { get; set; } = string.Empty;
    public string Password { get; set; } = string.Empty;

    private async Task LoginAsync()
    {
        if (await _userAuthService.IsUserLoggedInAsync())
        {
            _navManager.NavigateTo("/");

            return;
        }

        string? error = await _userAuthService.TryLoginAsync(UserName, Password);

        if (string.IsNullOrWhiteSpace(error))
        {
            _navManager.NavigateTo("/");
        }
        else
        {
            _errorMessage = error;
        }
    }
}
