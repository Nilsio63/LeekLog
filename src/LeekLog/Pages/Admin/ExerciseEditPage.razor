@page "/exercises/edit/{ExerciseId}"
@inject IExerciseService _exerciseService

<PageTitle>Edit Exercise</PageTitle>

<MudText Typo="Typo.h3">Edit Exercise</MudText>

<LeekLoadingOverlay IsLoading="_isLoading">
    <MudGrid>
        <MudItem xs="12">
            <MudText Typo="Typo.subtitle1">Edit your exercise.</MudText>
        </MudItem>

        <MudItem xs="12">
            <ExerciseEditComponent Exercise="Exercise" />
        </MudItem>
    </MudGrid>
</LeekLoadingOverlay>

@code {
    private bool _isLoading = false;

    public ExerciseEditModel? Exercise { get; set; }

    [Parameter]
    public string ExerciseId { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;

        ExerciseEntity? exerciseEntity = await _exerciseService.GetByIdAsync(ExerciseId);

        if (exerciseEntity is not null)
        {
            Exercise = new ExerciseEditModel
                {
                    ExerciseId = exerciseEntity.Id,
                    Title = exerciseEntity.Title,
                    Description = exerciseEntity.Description,
                    Tags = exerciseEntity.ExerciseTags.Select(o => o.Tag.Title).ToList()
                };
        }

        _isLoading = false;
    }
}
